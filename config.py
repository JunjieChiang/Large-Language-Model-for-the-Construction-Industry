import argparse


def get_args():
    parser = argparse.ArgumentParser(description='Parameter Configuration')
    # generative AI config
    parser.add_argument('--model_configs', type=str, default=None, help='model json-format configuration')
    parser.add_argument('--generative_model', type=str, default='gpt-3.5-turbo', help='the generative model')

    # RAG config
    parser.add_argument('--embedding_model', type=str, default='retriever/bge-m3', help='the embedding model')
    parser.add_argument('--top_k', type=int, default=3, help='the number of returned information chunks')
    parser.add_argument('--dimension', type=int, default=1024, help='please refer to the embedding model')

    # generation source
    parser.add_argument('--from_corpus', type=str, default="False", help='whether to generate data from corpus')
    parser.add_argument('--from_exam_paper', type=str, default="False", help='whether to generate data from test paper')

    # generate from corpus
    parser.add_argument('--data_path', type=str, default='example/corpus.txt', help='input data path')
    parser.add_argument('--k', type=int, default=1, help='the number of data generated by one api call')

    # generate from paper test
    parser.add_argument('--exam_data', type=str, default='example/textpaper/merged_output.jsonl', help='the examination data path')

    parser.add_argument('--data_result', type=str, default='result/finetune', help='the save path of generated data path')

    return parser.parse_args()
